class Unnamed {
  {
    int acc = 0;
    for (Order _ : orders) {
      if (acc < LIMIT) { 
        acc++;
      }
    }

    for (int i = 0, _ = sideEffect(); i < 10; i++) { }

    Queue<Integer> q = null;
    while (q.size() >= 3) {
      var x = q.remove();
      var y = q.remove();
      var _ = q.remove();
      new Point(x, y);
    }

    while (q.size() >= 3) {
      var x = q.remove();
      var _ = q.remove();
      var _ = q.remove(); 
      new Point(x, 0) ;
    }

    String s = null;
    try { 
      int i = Integer.parseInt(s);
    } catch (NumberFormatException _) { 
      System.out.println("Bad number: " + s);
    }

    try { doSomething(); } 
    catch (Exception _) { doSomething(); } 
    catch (Throwable _) { doSomething(); }

    try (var _ = ScopedContext.acquire()) {
      doSomething();
    }

    stream.collect(Collectors.toMap(String::toUpperCase, _ -> "NODATA"));
  }
}
